#include "includes.h"
#include "defines.h"

#define private public
#define protected public
#include "AP_InertialSensor_HIL.h"

using ::testing::Return;

//----------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------
//  FIXTURE:  BAT Fixture
//
//----------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------
class AP_InertialSensor_HIL_Update : public ::testing::Test
{
public:
    AP_InertialSensor_HIL classUT;
};

//-------------------------------------------------------------------------
//-------------------------------------------------------------------------
//   HELPERS
//-------------------------------------------------------------------------
//-------------------------------------------------------------------------

//-------------------------------------------------------------------------
//-------------------------------------------------------------------------
//   TESTS
//-------------------------------------------------------------------------
//-------------------------------------------------------------------------
TEST_F( AP_InertialSensor_HIL_Update, OnCall_LastUpdateTimeRefreshed )
{
    EXPECT_CALL( MOCK_HAL.scheduler, micros())
        .WillOnce( Return(HIL_MAX_LASTUPDATE_MS) );

    // Making an assumption the sample rates start at 50Hz then doubles from there.
    //---------------------------------------------------------
    ASSERT_EQ( classUT.update( ),
               true );
    /*
    ASSERT_EQ( classUT._last_update_usec,
               (uint32_t)HIL_MAX_LASTUPDATE_MS ); */
    //---------------------------------------------------------
}

